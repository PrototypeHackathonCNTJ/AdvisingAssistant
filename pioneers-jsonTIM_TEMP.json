{
  "id": "SOFTWARE 2730",
  "name": "Introduction to Software Engineering",
  "prereqs":["COMPUTER 2430"],
  "coreqs":[],
  "prereqStanding":"",
  "credits":"3",
  "info":"An introduction to software engineering principles, including discussions of development methodologies, requirements analysis, project planning, software design, software construction, software management, software quality, and CASE tools. Students gain experience, via a team project, in the life-cycle development of software systems.",
  "offerFall":"true",
  "offerFallOdd":"false",
  "offerFallEven":"false",
  "offerSpring":"true",
  "offerSpringOdd":"false",
  "offerSpringEven":"false",
  "offerSummer":"false",
  "offerWinter":"false",
  "classification": []
}
{
  "id": "SOFTWARE 3330",
  "name": "Intermediate Software Engineering",
  "prereqs":["COMPUTER 2630", "SOFTWARE 2730"],
  "coreqs":[],
  "prereqStanding":"",
  "credits":"3",
  "info":"A more detailed discussion of several software engineering topics included in previous courses including requirements engineering, software modeling, user-interface design, development processes and process improvement. Moderate size GUI-based group project.",
  "offerFall":"false",
  "offerFallOdd":"false",
  "offerFallEven":"false",
  "offerSpring":"true",
  "offerSpringOdd":"false",
  "offerSpringEven":"false",
  "offerSummer":"false",
  "offerWinter":"false",
  "classification": []
}
{
  "id": "SOFTWARE 3430",
  "name": "Object Oriented Analysis and Design",
  "prereqs":["COMPUTER 2430"],
  "coreqs":["SOFTWARE 2730"],
  "prereqStanding":"",
  "credits":"3",
  "info":"Requirements engineering, analysis, and specification using the object-oriented paradigm. Object-oriented architectural and detailed design. Use of an OOAD modeling language such as UML. Investigation of OOAD patterns. Moderate size, group project.",
  "offerFall":"true",
  "offerFallOdd":"false",
  "offerFallEven":"false",
  "offerSpring":"false",
  "offerSpringOdd":"false",
  "offerSpringEven":"false",
  "offerSummer":"false",
  "offerWinter":"false",
  "classification": []
}
{
  "id": "SOFTWARE 3730",
  "name": "Software Quality",
  "prereqs":["COMPUTER 2630", "SOFTWARE 2730"],
  "coreqs":[],
  "prereqStanding":"",
  "credits":"3",
  "info":"Study of the topics related to producing quality software, including software quality assurance, quality metrics, configuration management, verification validation, reviews, inspections, audits, and software process improvement models. Individual and team projects.",
  "offerFall":"true",
  "offerFallOdd":"false",
  "offerFallEven":"false",
  "offerSpring":"false",
  "offerSpringOdd":"false",
  "offerSpringEven":"false",
  "offerSummer":"false",
  "offerWinter":"false",
  "classification": []
}
{
  "id": "SOFTWARE 3860",
  "name": "Software Maintenance and Reengineering",
  "prereqs":["COMPUTER 2630", "SOFTWARE 2730", "SOFTWARE 3430"],
  "coreqs":[],
  "prereqStanding":"",
  "credits":"3",
  "info":"Study of the topics related to maintaining large-scale software systems. Study of software engineering topics such as estimation, software quality assurance, metrics, configuration management, verification validation, inspections, and personal and team software process as they relate to software maintenance projects. Coverage of traditional analysis and design methods such as structured analysis and design. Students gain experience via semester-long, team-based project(s) in software maintenance and reengineering.",
  "offerFall":"false",
  "offerFallOdd":"false",
  "offerFallEven":"false",
  "offerSpring":"true",
  "offerSpringOdd":"false",
  "offerSpringEven":"false",
  "offerSummer":"false",
  "offerWinter":"false",
  "classification": []
}
{
  "id": "SOFTWARE 4110",
  "name": "Software Engineering Seminar",
  "prereqs":[],
  "coreqs":[],
  "prereqStanding":"junior",
  "credits":"1",
  "info":"The course consists of lectures/discussions presented by both software engineering faculty and students enrolled in the class.",
  "offerFall":"true",
  "offerFallOdd":"false",
  "offerFallEven":"false",
  "offerSpring":"true",
  "offerSpringOdd":"false",
  "offerSpringEven":"false",
  "offerSummer":"false",
  "offerWinter":"false",
  "classification": []
}
{
  "id": "SOFTWARE 4130",
  "name": "Real-Time Embedded Systems Programming",
  "prereqs":["COMPUTER 2630", "SOFTWARE 3430", "COMPUTER 3230"],
  "coreqs":[],
  "prereqStanding":"",
  "credits":"3",
  "info":"An exploration of programming techniques and constructs used to develop reliable software systems capable of responding in real time to environmental changes. An overview of the platforms, tools, and processes used in developing software for embedded systems. Hands-on lab projects experimenting with real-time embedded systems programming details.",
  "offerFall":"false",
  "offerFallOdd":"false",
  "offerFallEven":"false",
  "offerSpring":"true",
  "offerSpringOdd":"false",
  "offerSpringEven":"false",
  "offerSummer":"false",
  "offerWinter":"false",
  "classification": []
}
{
  "id": "SOFTWARE 4330",
  "name": "Software Engineering Project I",
  "prereqs":["MATH 2730", "SOFTWARE 3330", "SOFTWARE 3430"],
  "coreqs":[],
  "prereqStanding":"",
  "credits":"3",
  "info":"Emphasis in applying software engineering knowledge learned in this course and previous courses to a large, team-based, capstone project that spans two semesters. In-depth study of several software engineering topics introduced in earlier courses, such as agile development; computer aided software engineering tools; analysis and design methods; and risk management. An introduction to formal methods for specification and design.",
  "offerFall":"true",
  "offerFallOdd":"false",
  "offerFallEven":"false",
  "offerSpring":"false",
  "offerSpringOdd":"false",
  "offerSpringEven":"false",
  "offerSummer":"false",
  "offerWinter":"false",
  "classification": []
}
{
  "id": "SOFTWARE 4730",
  "name": "Software Engineering Project II",
  "prereqs":["SOFTWARE 3730", "SOFTWARE 4330"],
  "coreqs":[],
  "prereqStanding":"",
  "credits":"3",
  "info":"The project started in SOFTWARE 4330 is continued and carried to completion. In-depth study of several software engineering topics introduced in earlier courses, such as agile development, computer aided software engineering tools, review, testing and maintenance. The course will also introduce current research issues in software engineering.",
  "offerFall":"false",
  "offerFallOdd":"false",
  "offerFallEven":"false",
  "offerSpring":"true",
  "offerSpringOdd":"false",
  "offerSpringEven":"false",
  "offerSummer":"false",
  "offerWinter":"false",
  "classification": []
}
